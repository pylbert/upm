# For now, Google Test is NOT required */
find_package(GTest)

# If not found, print a status message and return
if(NOT GTEST_FOUND)
    message(STATUS "Install Google Test to enable additional unit testing")
    return ()
endif()

# Unit tests - utilities library
add_executable(utilities_tests utilities/utilities_tests.cxx)
target_link_libraries(utilities_tests utilities GTest::GTest GTest::Main)
gtest_add_tests(utilities_tests "" AUTO)

# Unit tests - Json header
add_executable(json_tests json/json_tests.cxx)
target_link_libraries(json_tests GTest::GTest GTest::Main)
target_include_directories(json_tests PRIVATE "${UPM_COMMON_HEADER_DIRS}/")
gtest_add_tests(json_tests "" AUTO)

# Unit tests - core library
add_executable(core_tests
    core/Gadget_tests.cxx

    core/Sensor_tests.cxx
    core/Temperature_tests.cxx

    core/Actuator_tests.cxx
    core/ServoController_tests.cxx

    core/Sensor_example.json
    core/Actuator_example.json)

configure_file(core/Sensor_example.json Sensor_example.json COPYONLY)
configure_file(core/Actuator_example.json Actuator_example.json COPYONLY)

target_link_libraries(core_tests core GTest::GTest GTest::Main)
gtest_add_tests(core_tests "" AUTO)

# Add a custom target for unit tests
add_custom_target(tests-unit ALL
    DEPENDS
    utilities_tests
    json_tests
    core_tests
    COMMENT "UPM unit test collection")

